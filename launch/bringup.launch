<?xml version="1.0"?>
<launch>
  <arg default="192.168.0.100" name="lidar_host"/>
  <arg default="$(find asv_description)/urdf/asv_base.xacro" name="urdf_path"/>
  <arg default="/dev/ttyUSB0" name="gps_com"/>
  <arg default="38400" name="gps_baud"/>
  <!--Install the following
-ros-kinetic-desktop-full
-ros-kinetic-lms1xx
-ros-kinetic-nmea-navsat-driver
-ros-kinetic-pid
-ros-kinetic-gps-common
-ros-kinetic-robot-pose-ekf
-->
  <!-- Load the URDF into the ROS Parameter Server -->
  <param command="$(find xacro)/xacro '$(find asv_gazebo)/urdf/gazebo.xacro' --inorder" name="robot_description"/>
  <!--Load the Joint Configuration File -->
  <rosparam command="load" file="$(find asv_controls)/config/asv_joints.yaml"/>
  <!--Load/Spawn the controllers in the World-->
  <!--<node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/asv" args="joint_state_controller" />-->
  <!--Joint And Robot State Publishers to give TF of all links-->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
  <!-- All the sensors's nodes have been created here for sensor streams -->
  <include file="$(find lms1xx)/launch/LMS1xx.launch">
    <arg name="world_name" value="$(arg lidar_host)"/>
  </include>
  <include file="$(find asv_bringup)/launch/gps.launch">
    <arg value="$(arg gps_com)" name="gps_com"/>
    <arg value="$(arg gps_baud)" name="gps_baud"/>
  </include>

  <!--Node to convert GPS Data to Odometry Format-->
  <node name="gps_conv" pkg="gps_common" type="utm_odometry_node">
    <remap from="odom" to="gps_odom" />
    <remap from="fix" to="/gps/fix" />
    <param name="rot_covariance" value="99999" />
    <param name="frame_id" value="garmin" />
  </node>

  <!-- Extended Kallman Filter to Merge various sensor streams to generate an odometry-->
  <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
    <param name="output_frame" value="odom" />
    <param name="freq" value="30" />
    <param name="odom_used" value="true" />
    <param name="imu_used" value="true" />
    <param name="vo_used" value="false" />
  </node>

</launch>